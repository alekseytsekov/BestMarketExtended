<div class="row home-wrapper">

    <div id="product-wrapper" class="form-group col-xs-8 col-xs-offset-2 text-center">
    </div>

</div>

<script>

    window.addEventListener('load', function(){
        if(hasMetaMask){

            getProducts();
			function getProducts() {

				let option = {
					from: currentUserAddress,
					gas: 1000000
				};

				marketContract.getNumberOfProducts(option, function (err, result) {
					if (err) {
						showErrorMsg(err);
						return;
					}

					//console.log(result);
					let numberOfProducts = JSON.parse(result);
                    

					for (let i = 0; i < numberOfProducts; i++) {
						marketContract.getProduct(i, option, function (e, r) {
							if (e) {
								showErrorMsg(r);
								return;
							}

							//console.log(r);

							let name = r[1];
							let price = web3.fromWei(JSON.parse(r[0]), 'ether');
							let description = r[2];
							let ipfsLink = r[3];

							addProductToView({
								name,
								price,
								description,
								link: ipfsLink
							});
						});
					}
				});
			}

            //$('.btn-buy-product').click(buyProduct);
            setTimeout(setBuyEvent, 500);

            function setBuyEvent() {
                $('.btn-buy-product').click(buyProduct);
            }

            function buyProduct() {

                showLoader();

                let name = $(this).data('productname');
                //let price = $(this).data('price');

                let option = {
                    from: currentUserAddress,
                    //value: `${web3.toWei(price, 'ether')}`,
                    gas: 4000000
                };

                let approveEvent = tokenContract.Approval();
                let tempPrice = '';

                marketContract.getProductPriceSellerAddr(name, option, function(err, res){
                    if (err) {
                        msgHandler.showErrorMsg(err);
                        hideLoader();
                        return;
                    }

                    tempPrice = JSON.parse(res[0]);
                    let sellerAddress = res[1];
                    
                    // confirm
                    if(!confirm(`Will you buy a product at this price: ${tempPrice}?`)){
                        hideLoader();
                        return; 
                    }
                    
                    marketContract.fee.call(function(err, fee){

                        let bigNum = new BigNumber(tempPrice);
                        let marketPercent = bigNum.dividedBy(100).multipliedBy(fee) ;
                        let sellerPercent = new BigNumber(tempPrice).minus(marketPercent);

                        tempPrice = JSON.parse(marketPercent);

                        console.log(JSON.parse(bigNum));
                        console.log(JSON.parse(marketPercent));
                        console.log(JSON.parse(sellerPercent));
                        //console.log(JSON.parse(fee));
                        
                        // approve seller percent
                        tokenContract.approve(sellerAddress, JSON.parse(sellerPercent) , function(err, res){
                            if (err) {
                                msgHandler.showErrorMsg(err);
                                hideLoader();
                                return;
                            }

                            // approve market percent
                            tokenContract.approve(contractAddress, JSON.parse(marketPercent) , function(err, res){
                                if (err) {
                                    msgHandler.showErrorMsg(err);
                                    hideLoader();
                                    return;
                                }
                            });

                        });

                    })
                });

                approveEvent.watch(function(err, res){
                    if (err) {
                        msgHandler.showErrorMsg(err);
                        hideLoader();
                        return;
                    }

                    // check result for needed args
                    let isMyEvent =  res.args.owner.toLowerCase() === currentUserAddress.toLowerCase() && 
                                        res.args.spender.toLowerCase() === contractAddress.toLowerCase() && 
                                        JSON.parse(res.args.value) === tempPrice;

                    if(isMyEvent){
                        
                        console.log('my event');

                        marketContract.buyProduct(name, option, function (err, resss) {
                            if (err) {
                                msgHandler.showErrorMsg(err);
                                hideLoader();
                                return;
                            }

                            console.log(resss);
                            console.log(resss[0]);
                            console.log(resss[1]);

                            let msg = `Successfully buy a product '${name}'! Transaction hash: <a target="_blank" href="https://ropsten.etherscan.io/tx/${resss}">${resss}</a>`;
                            msgHandler.showSuccessMsg(msg);
                            hideLoader();
                        });
                    }
                });


                
                
            }

            // add product to view
            function addProductToView(product) {
                let productView =
                    ` <div class="col-xs-4">
                        <br>
                        <br>

                        <fieldset class="wrapper-product-view">
                            <div class="col-xs-12">
                                Name:
                                <b>${product.name}</b>
                            </div>

                            <div class="col-xs-12">
                                Price:
                                <b>${product.price}</b> * 10 ** 18 tokens(mt)
                            </div>

                            <div class="col-xs-12">
                                Description:
                                <textarea class="form-control" readonly>${product.description}</textarea>
                            </div>

                            <div class="col-xs-12">
                                <br>
                                <img class="product-img" src="https://ipfs.io/ipfs/${product.link}">
                            </div>

                            <div class="col-xs-12">
                                <br>
                                <button class="btn btn-primary btn-buy-product" type="button" data-price="${product.price}" data-productname="${product.name}">Purchase</button>
                            </div>
                        </fieldset>
                    </div>`;

                $('#product-wrapper').append(productView);
            }
        
            function showLoader(){
                loader.start();
                $('.home-wrapper').hide();
            }

            function hideLoader(){
                loader.stop();
                $('.home-wrapper').show();
            }
        }
    })
    
</script>